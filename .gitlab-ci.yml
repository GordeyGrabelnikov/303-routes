stages:
- build
- test

.base:
  image: ruby:2.6.3
  cache:
    key: gems_and_packages
    paths:
      - apt-cache/
      - vendor/ruby
    policy: pull
  before_script:
    - gem install bundler -v 2.0.2 --no-document
    - bundle install --jobs $(nproc) "${FLAGS[@]}" --path=vendor
      â€‹
.base_db:
  extends: .base
  services:
    - postgres:latest
  variables:
    RAILS_ENV: test
    POSTGRES_DB: routes_303_test
    POSTGRES_USER: runner
  before_script:
    - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
    - apt-get update -qq && apt-get -o dir::cache::archives="$APT_CACHE_DIR" install -yqq nodejs
    - cp config/database.yml.example config/database.yml
    - gem install bundler --no-document
    - bundle install --jobs $(nproc) "${FLAGS[@]}" --path=vendor
    - bundle exec rake db:create db:schema:load

build:rubocop:
  extends: .base
  stage: build
  cache:
    policy: pull-push
  script:
    - bundle exec rubocop

test:bundle_audit:
  extends: .base
  allow_failure: true
  script:
    - bundle exec bundle audit check --update

test:rspec:
  extends: .base_db
  stage: test
  artifacts:
    name: coverage_report
    paths:
      - coverage/
  script:
    - bundle exec rspec
