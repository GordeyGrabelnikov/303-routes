<div class="row form-group">
  <div class="col-sm-6">
    <div class="row form-group">
      <label class="col-sm-4">
        <%= t('.route_name') %>
      </label>
      <div class="col-sm-8">
        <%= @route.name %>
      </div>
    </div>
    <div class="row form-group">
      <label class="col-sm-4">
        <%= t('.route_type') %>
      </label>
      <div class="col-sm-8">
        <%= @route.movement_type %>
      </div>
    </div>
    <div class="row form-group">
      <label class="col-sm-4">
        <%= t('.route_points') %>
      </label>
      <div class="col-sm-8">
        <% @route.points.each do |x|%>
          <div>
            <%= link_to "#{x.name}", x %>
          </div>
        <% end %>
      </div>
    </div>
    <div class="row form-group">
      <label class="col-sm-4">
        <%= t('.route_author')%>
      </label>
      <div class="col-sm-8">
        <%= @route.user.first_name %>
        <%= @route.user.last_name %>
      </div>
    </div>
  </div>
  <div class="col-sm-6">
    <% if current_user %>
      <div class="row">
        <div class="col-sm-12 rating">
          <%= rating_for_user @route, current_user, 'route', half_show: true, star: 5, readonly: true, disable: true, cancel: false%>
          <%= imdb_style_rating_for @route, 'route' %>
        </div>
      </div>
    <% end %>
    <div class="row">
      <div class="col-sm-12" style="text-align: center;">
        <%= link_to t('helpers.links.back'), routes_path, class: 'btn btn-info'%>
        <% if current_user && (current_user == @route.user  || current_user.admin?)%>
          <%= link_to  t('helpers.titles.edit', model: t('activerecord.models.route')), edit_route_path, class: 'btn btn-info' %>
          <%= link_to  t('helpers.titles.delete', model: t('activerecord.models.route')), route_path, method: :delete, data: {confirm: t('helpers.links.confirm')},  class: 'btn btn-danger' %>
        <% end %>
        <% if @route.unpublished? &&  current_user.admin?%>
          <%= form_with(url: update_route_status_route_path, method: :patch, local: true, class: "form--single-btn") do |f| %>
            <%= submit_tag 'Confirm', class: "btn btn-success" %>
          <% end %>
        <% end  %>
      </div>
    </div>
  </div>
</div>
<div class="row map-wrapper">
  <div class="col-sm-6">
    <div id="map"></div>
  </div>
  <div class="col-sm-6">
    <div id="right-panel">
      <p>Total Distance: <span id="total"></span></p>
    </div>
  </div>
</div>

<div>
  <% @route.route_images.each do |image| %>
  <%= image_tag(image, style: "width:150px;height:160px;object-fit:cover") if @route.route_images.attached? %>
  <% end %>
</div>

<div>
  <%= render 'comments/form', commentable: @route %>
</div>
<ul class="comments">
  <%= render(partial: 'comments/comment', collection: @route.comments.includes(:user)) %>
</ul>

<script>
    function initMap() {
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 14,
            center: {lat: 54.991105, lng: 73.371160}
        });
        var directionsService = new google.maps.DirectionsService;
        var directionsRenderer = new google.maps.DirectionsRenderer({
            panel: document.getElementById('right-panel')
        });

        directionsRenderer.setMap(map);
        calculateAndDisplayRoute(directionsService, directionsRenderer)
    }

    function computeTotalDistance(result) {
        var total = 0;
        var myroute = result.routes[0];
        for (var i = 0; i < myroute.legs.length; i++) {
            total += myroute.legs[i].distance.value;
        }
        total = total / 1000;
        document.getElementById('total').innerHTML = total + ' km';
    }


    function calculateAndDisplayRoute(directionsService, directionsRenderer) {
        var selectedMode = "<%= @route.movement_type %>";
        var waypts = [];
        <% @route.point_ids.each do |point|%>;
            waypts.push({placeId: "<%= point %>"})
        <% end %>
        var src = waypts.shift();
        var dest = waypts.pop();
        waypts = waypts.map(function(point) {
            return {
                location: point,
                stopover: true
            };
        });
        directionsService.route({
            origin: src,
            destination: dest,
            waypoints: waypts,
            optimizeWaypoints: true,
            travelMode: google.maps.TravelMode[selectedMode]
        }, function(response, status) {
            if (status === 'OK') {
                directionsRenderer.setDirections(response);
                computeTotalDistance(directionsRenderer.getDirections());
            } else {
                window.alert('Directions request failed due to ' + status);
            }
        });
    }
</script>
<script async defer
        src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAHXX8DjN4Fb2rQAarckXap5EKeAhUs8Uk&callback=initMap">
</script>
